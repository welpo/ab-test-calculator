import {
  calculateExperimentSize,
  calculateMDEFromSampleSize,
} from "./statistics.js";

let passedTests = 0;
let failedTests = 0;
let failedTestNames = [];

function areArraysClose(arr1, arr2, tolerance = 0.01) {
  if (arr1.length !== arr2.length) return false;
  for (let i = 0; i < arr1.length; i++) {
    if (!areClose(arr1[i], arr2[i], tolerance)) {
      return false;
    }
  }
  return true;
}

function areClose(a, b, tolerance = 0.01) {
  if (a === 0 && b === 0) return true;
  const relError = Math.abs((a - b) / Math.max(Math.abs(a), Math.abs(b)));
  return relError <= tolerance;
}

function createDebugPanel() {
  const debugPanel = document.createElement("div");
  debugPanel.id = "debug-panel";
  debugPanel.style.cssText =
    "position: fixed; bottom: 10px; right: 10px; background: rgba(30,30,30,0.9); color: white; padding: 10px; max-width: min(500px, calc(100vw - 20px)); width: 100%; max-height: 500px; overflow-y: auto; font-family: monospace; font-size: 12px; z-index: 9999; border-radius: 6px; box-shadow: 0 4px 8px rgba(0,0,0,0.3); transition: all 0.3s ease;";
  const header = document.createElement("div");
  header.style.cssText =
    "display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; padding-bottom: 8px; border-bottom: 1px solid rgba(255,255,255,0.2);";

  const title = document.createElement("h3");
  title.textContent = "🧪 Test results";
  title.style.cssText = "margin: 0; font-size: 14px; color: #fff;";

  const closeButton = document.createElement("button");
  closeButton.textContent = "×";
  closeButton.style.cssText =
    "background: none; border: none; color: #ccc; font-size: 18px; cursor: pointer; padding: 0 5px;";
  closeButton.onclick = function () {
    debugPanel.style.opacity = "0";
    setTimeout(() => {
      debugPanel.style.display = "none";
    }, 300);
  };

  header.appendChild(title);
  header.appendChild(closeButton);
  debugPanel.appendChild(header);

  const content = document.createElement("div");
  content.id = "debug-content";
  content.style.cssText = "overflow-y: auto; max-height: 320px;";
  debugPanel.appendChild(content);

  const controls = document.createElement("div");
  controls.style.cssText =
    "display: flex; justify-content: space-between; margin-top: 8px; padding-top: 8px; border-top: 1px solid rgba(255,255,255,0.2);";

  const clearButton = document.createElement("button");
  clearButton.textContent = "Clear";
  clearButton.style.cssText =
    "background: #555; border: none; color: white; padding: 4px 8px; border-radius: 3px; cursor: pointer; font-size: 11px;";
  clearButton.onclick = function () {
    document.getElementById("debug-content").innerHTML = "";
    passedTests = 0;
    failedTests = 0;
  };

  const runTestsButton = document.createElement("button");
  runTestsButton.textContent = "Run Tests Again";
  runTestsButton.style.cssText =
    "background: #4a90e2; border: none; color: white; padding: 4px 8px; border-radius: 3px; cursor: pointer; font-size: 11px;";
  runTestsButton.onclick = function () {
    document.getElementById("debug-content").innerHTML = "";
    passedTests = 0;
    failedTests = 0;
    runAllTests();
  };

  controls.appendChild(clearButton);
  controls.appendChild(runTestsButton);
  debugPanel.appendChild(controls);

  return debugPanel;
}

function debugLog(message, type = "info") {
  const content = document.getElementById("debug-content");
  if (!content) return;

  const p = document.createElement("div");
  p.style.cssText =
    "margin: 4px 0; padding: 3px 0; border-bottom: 1px solid rgba(255,255,255,0.1);";

  switch (type) {
    case "pass":
      p.style.color = "#4caf50";
      message = `✅ ${message}`;
      break;
    case "fail":
      p.style.color = "#f44336";
      message = `❌ ${message}`;
      break;
    case "header":
      p.style.fontWeight = "bold";
      p.style.color = "#ffeb3b";
      p.style.paddingTop = "6px";
      break;
    case "summary":
      p.style.fontWeight = "bold";
      p.style.marginTop = "8px";
      break;
    default:
      p.style.color = "#ffffff";
  }

  p.textContent = message;
  content.appendChild(p);
  console.log(message);

  requestAnimationFrame(() => {
    content.scrollTop = content.scrollHeight;
  });
}

const regressionTestCases = [
  // Start of tests generated from TrialSize::TwoSampleProportion.NIS (margin=0) on 2025-06-24
  {
    name: "SUP | 50/50 | Small effect",
    baseline: 10.0,
    absoluteMde: 0.2,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 561364, perGroup: [280682, 280682] },
  },
  {
    name: "SUP | 50/50 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 6048, perGroup: [3024, 3024] },
  },
  {
    name: "SUP | 50/50 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 8506, perGroup: [4253, 4253] },
  },
  {
    name: "SUP | 50/50 | Email",
    baseline: 25.0,
    absoluteMde: 5.0,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 2288, perGroup: [1144, 1144] },
  },
  {
    name: "SUP | 70/30 | High power",
    baseline: 5.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 6100, perGroup: [4270, 1830] },
  },
  {
    name: "SUP | 70/30 | Small effect",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 12377, perGroup: [8664, 3713] },
  },
  {
    name: "SUP | 70/30 | Sign-up",
    baseline: 12.0,
    absoluteMde: 1.7999999999999998,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 14470, perGroup: [10129, 4341] },
  },
  {
    name: "SUP | 30/70 | Large effect",
    baseline: 15.0,
    absoluteMde: 7.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 742, perGroup: [223, 519] },
  },
  {
    name: "SUP | 30/70 | Purchase",
    baseline: 45.0,
    absoluteMde: 4.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 3610, perGroup: [1083, 2527] },
  },
  {
    name: "SUP | 30/70 | Conservative",
    baseline: 8.0,
    absoluteMde: 2.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 12148, perGroup: [3645, 8503] },
  },
  {
    name: "SUP | 80/20 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 9900, perGroup: [7920, 1980] },
  },
  {
    name: "SUP | 80/20 | Strict alpha",
    baseline: 10.0,
    absoluteMde: 3.0,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 7565, perGroup: [6052, 1513] },
  },
  {
    name: "SUP | 80/20 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 14380, perGroup: [11504, 2876] },
  },
  {
    name: "SUP | 20/80 | High power",
    baseline: 5.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 6828, perGroup: [1366, 5462] },
  },
  {
    name: "SUP | 20/80 | Email",
    baseline: 25.0,
    absoluteMde: 5.0,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 3452, perGroup: [691, 2761] },
  },
  {
    name: "SUP | 20/80 | Large effect",
    baseline: 15.0,
    absoluteMde: 7.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 942, perGroup: [189, 753] },
  },
  {
    name: "SUP | 90/10 | Small effect",
    baseline: 10.0,
    absoluteMde: 0.2,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 1570310, perGroup: [1413279, 157031] },
  },
  {
    name: "SUP | 90/10 | Small effect variant",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 29280, perGroup: [26352, 2928] },
  },
  {
    name: "SUP | 90/10 | Sign-up",
    baseline: 12.0,
    absoluteMde: 1.7999999999999998,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 34550, perGroup: [31095, 3455] },
  },
  {
    name: "SUP | 10/90 | Purchase",
    baseline: 45.0,
    absoluteMde: 4.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 8406, perGroup: [841, 7565] },
  },
  {
    name: "SUP | 10/90 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 21043, perGroup: [2105, 18938] },
  },
  {
    name: "SUP | 10/90 | Conservative",
    baseline: 8.0,
    absoluteMde: 2.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 27160, perGroup: [2716, 24444] },
  },
  {
    name: "SUP | 99/1 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 164700, perGroup: [163053, 1647] },
  },
  {
    name: "SUP | 99/1 | Strict alpha",
    baseline: 10.0,
    absoluteMde: 3.0,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 127200, perGroup: [125928, 1272] },
  },
  {
    name: "SUP | 99/1 | Email",
    baseline: 25.0,
    absoluteMde: 5.0,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 61000, perGroup: [60390, 610] },
  },
  {
    name: "SUP | 1/99 | High power",
    baseline: 5.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 103105, perGroup: [1032, 102073] },
  },
  {
    name: "SUP | 1/99 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 186008, perGroup: [1861, 184147] },
  },
  {
    name: "SUP | 1/99 | Large effect",
    baseline: 15.0,
    absoluteMde: 7.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "superiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 14209, perGroup: [143, 14066] },
  },
  // End of tests generated from TrialSize::TwoSampleProportion.NIS (margin=0) on 2025-06-24

  // Start of tests generated from TrialSize::TwoSampleProportion.Equality on 2025-06-24
  {
    name: "TT | 50/50 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 7678, perGroup: [3839, 3839] },
  },
  {
    name: "TT | 50/50 | High power",
    baseline: 5.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 5916, perGroup: [2958, 2958] },
  },
  {
    name: "TT | 50/50 | Small effect",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 13014, perGroup: [6507, 6507] },
  },
  {
    name: "TT | 50/50 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 10798, perGroup: [5399, 5399] },
  },
  {
    name: "TT | 70/30 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 9430, perGroup: [6601, 2829] },
  },
  {
    name: "TT | 70/30 | Large effect",
    baseline: 15.0,
    absoluteMde: 7.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 1067, perGroup: [747, 320] },
  },
  {
    name: "TT | 70/30 | Email click rate",
    baseline: 25.0,
    absoluteMde: 5.0,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 3477, perGroup: [2434, 1043] },
  },
  {
    name: "TT | 30/70 | Strict alpha",
    baseline: 10.0,
    absoluteMde: 3.0,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 5990, perGroup: [1797, 4193] },
  },
  {
    name: "TT | 30/70 | Sign-up rate",
    baseline: 12.0,
    absoluteMde: 1.7999999999999998,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 16928, perGroup: [5079, 11849] },
  },
  {
    name: "TT | 30/70 | Purchase completion",
    baseline: 45.0,
    absoluteMde: 4.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 4583, perGroup: [1375, 3208] },
  },
  {
    name: "TT | 80/20 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 12570, perGroup: [10056, 2514] },
  },
  {
    name: "TT | 80/20 | Conservative test",
    baseline: 8.0,
    absoluteMde: 2.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 20465, perGroup: [16372, 4093] },
  },
  {
    name: "TT | 80/20 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 18255, perGroup: [14604, 3651] },
  },
  {
    name: "TT | 20/80 | High power",
    baseline: 5.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 8378, perGroup: [1676, 6702] },
  },
  {
    name: "TT | 20/80 | Email click rate",
    baseline: 25.0,
    absoluteMde: 5.0,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 4310, perGroup: [862, 3448] },
  },
  {
    name: "TT | 20/80 | Small effect",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 19908, perGroup: [3982, 15926] },
  },
  {
    name: "TT | 90/10 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 22690, perGroup: [20421, 2269] },
  },
  {
    name: "TT | 90/10 | Large effect",
    baseline: 15.0,
    absoluteMde: 7.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 2640, perGroup: [2376, 264] },
  },
  {
    name: "TT | 90/10 | Sign-up rate",
    baseline: 12.0,
    absoluteMde: 1.7999999999999998,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 42390, perGroup: [38151, 4239] },
  },
  {
    name: "TT | 10/90 | Purchase completion",
    baseline: 45.0,
    absoluteMde: 4.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 10670, perGroup: [1067, 9603] },
  },
  {
    name: "TT | 10/90 | Strict alpha",
    baseline: 10.0,
    absoluteMde: 3.0,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 13310, perGroup: [1331, 11979] },
  },
  {
    name: "TT | 10/90 | Conservative test",
    baseline: 8.0,
    absoluteMde: 2.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 31566, perGroup: [3157, 28409] },
  },
  {
    name: "TT | 99/1 | Basic",
    baseline: 10.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 209000, perGroup: [206910, 2090] },
  },
  {
    name: "TT | 99/1 | High power",
    baseline: 5.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 172300, perGroup: [170577, 1723] },
  },
  {
    name: "TT | 99/1 | Email click rate",
    baseline: 25.0,
    absoluteMde: 5.0,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 76100, perGroup: [75339, 761] },
  },
  {
    name: "TT | 1/99 | Large effect",
    baseline: 15.0,
    absoluteMde: 7.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 18038, perGroup: [181, 17857] },
  },
  {
    name: "TT | 1/99 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.99,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 236140, perGroup: [2362, 233778] },
  },
  {
    name: "TT | 1/99 | Small effect",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "two-tailed",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 317357, perGroup: [3174, 314183] },
  },
  // End of tests generated from TrialSize::TwoSampleProportion.Equality on 2025-06-24

  // Start of tests generated from TrialSize::TwoSampleProportion.Equivalence on 2025-06-24
  {
    name: "EQ | 50/50 | Basic",
    baseline: 10.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 123320, perGroup: [61660, 61660] },
  },
  {
    name: "EQ | 50/50 | Tight margin",
    baseline: 15.0,
    absoluteMde: 0.44999999999999996,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 272560, perGroup: [136280, 136280] },
  },
  {
    name: "EQ | 50/50 | Wide margin",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 13704, perGroup: [6852, 6852] },
  },
  {
    name: "EQ | 50/50 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.06,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 2768978, perGroup: [1384489, 1384489] },
  },
  {
    name: "EQ | 70/30 | Basic",
    baseline: 10.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 146810, perGroup: [102767, 44043] },
  },
  {
    name: "EQ | 70/30 | High power",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 137197, perGroup: [96038, 41159] },
  },
  {
    name: "EQ | 70/30 | Email open rate",
    baseline: 25.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 339767, perGroup: [237837, 101930] },
  },
  {
    name: "EQ | 30/70 | Wide margin",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 16313, perGroup: [4894, 11419] },
  },
  {
    name: "EQ | 30/70 | Click-through rate",
    baseline: 8.0,
    absoluteMde: 0.32,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 370403, perGroup: [111121, 259282] },
  },
  {
    name: "EQ | 30/70 | Sign-up conversion",
    baseline: 18.0,
    absoluteMde: 0.54,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 206419, perGroup: [61926, 144493] },
  },
  {
    name: "EQ | 80/20 | Basic",
    baseline: 10.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 192690, perGroup: [154152, 38538] },
  },
  {
    name: "EQ | 80/20 | Strict alpha",
    baseline: 12.0,
    absoluteMde: 0.72,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 165725, perGroup: [132580, 33145] },
  },
  {
    name: "EQ | 80/20 | Purchase completion",
    baseline: 45.0,
    absoluteMde: 2.25,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 29070, perGroup: [23256, 5814] },
  },
  {
    name: "EQ | 20/80 | Tight margin",
    baseline: 15.0,
    absoluteMde: 0.44999999999999996,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 425874, perGroup: [85175, 340699] },
  },
  {
    name: "EQ | 20/80 | Email open rate",
    baseline: 25.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 445943, perGroup: [89189, 356754] },
  },
  {
    name: "EQ | 20/80 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.06,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 4326528, perGroup: [865306, 3461222] },
  },
  {
    name: "EQ | 90/10 | Basic",
    baseline: 10.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 342560, perGroup: [308304, 34256] },
  },
  {
    name: "EQ | 90/10 | Wide margin",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 38070, perGroup: [34263, 3807] },
  },
  {
    name: "EQ | 90/10 | High power",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 320130, perGroup: [288117, 32013] },
  },
  {
    name: "EQ | 10/90 | Click-through rate",
    baseline: 8.0,
    absoluteMde: 0.32,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 864272, perGroup: [86428, 777844] },
  },
  {
    name: "EQ | 10/90 | Sign-up conversion",
    baseline: 18.0,
    absoluteMde: 0.54,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 481644, perGroup: [48165, 433479] },
  },
  {
    name: "EQ | 10/90 | Purchase completion",
    baseline: 45.0,
    absoluteMde: 2.25,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 51679, perGroup: [5168, 46511] },
  },
  {
    name: "EQ | 99/1 | Basic",
    baseline: 10.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 3114200, perGroup: [3083058, 31142] },
  },
  {
    name: "EQ | 99/1 | Strict alpha",
    baseline: 12.0,
    absoluteMde: 0.72,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 2678400, perGroup: [2651616, 26784] },
  },
  {
    name: "EQ | 99/1 | Tight margin",
    baseline: 15.0,
    absoluteMde: 0.44999999999999996,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 6882800, perGroup: [6813972, 68828] },
  },
  {
    name: "EQ | 1/99 | Wide margin",
    baseline: 20.0,
    absoluteMde: 2.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 346015, perGroup: [3461, 342554] },
  },
  {
    name: "EQ | 1/99 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.06,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 69923670, perGroup: [699237, 69224433] },
  },
  {
    name: "EQ | 1/99 | Email open rate",
    baseline: 25.0,
    absoluteMde: 0.5,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "equivalence",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 7207146, perGroup: [72072, 7135074] },
  },
  // End of tests generated from TrialSize::TwoSampleProportion.Equivalence on 2025-06-24

  // Start of tests generated from epiR::epi.ssninfb on 2025-06-24
  {
    name: "NI | 50/50 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 22258, perGroup: [11129, 11129] },
  },
  {
    name: "NI | 50/50 | Conservative",
    baseline: 5.0,
    absoluteMde: 0.25,
    alpha: 0.025,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 319426, perGroup: [159713, 159713] },
  },
  {
    name: "NI | 50/50 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.30000000000000004,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 79962, perGroup: [39981, 39981] },
  },
  {
    name: "NI | 50/50 | Email open rate",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 64230, perGroup: [32115, 32115] },
  },
  {
    name: "NI | 70/30 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 26498, perGroup: [18548, 7950] },
  },
  {
    name: "NI | 70/30 | High baseline, tight margin",
    baseline: 30.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 27479, perGroup: [19235, 8244] },
  },
  {
    name: "NI | 70/30 | Click-through rate",
    baseline: 8.0,
    absoluteMde: 1.0,
    alpha: 0.025,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 31469, perGroup: [22028, 9441] },
  },
  {
    name: "NI | 30/70 | Medium baseline, medium margin",
    baseline: 15.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 19400, perGroup: [5820, 13580] },
  },
  {
    name: "NI | 30/70 | Sign-up conversion",
    baseline: 18.0,
    absoluteMde: 1.08,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 37256, perGroup: [11177, 26079] },
  },
  {
    name: "NI | 30/70 | Low baseline, loose margin",
    baseline: 2.0,
    absoluteMde: 0.4,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 36066, perGroup: [10820, 25246] },
  },
  {
    name: "NI | 80/20 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 34778, perGroup: [27822, 6956] },
  },
  {
    name: "NI | 80/20 | High power, tight margin",
    baseline: 20.0,
    absoluteMde: 1.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 129948, perGroup: [103958, 25990] },
  },
  {
    name: "NI | 80/20 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.30000000000000004,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 124940, perGroup: [99952, 24988] },
  },
  {
    name: "NI | 20/80 | Conservative",
    baseline: 5.0,
    absoluteMde: 0.25,
    alpha: 0.025,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 499104, perGroup: [99821, 399283] },
  },
  {
    name: "NI | 20/80 | Email open rate",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 100359, perGroup: [20072, 80287] },
  },
  {
    name: "NI | 20/80 | Medium baseline, medium margin",
    baseline: 15.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 25463, perGroup: [5093, 20370] },
  },
  {
    name: "NI | 90/10 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 61827, perGroup: [55644, 6183] },
  },
  {
    name: "NI | 90/10 | High baseline, tight margin",
    baseline: 30.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 64116, perGroup: [57704, 6412] },
  },
  {
    name: "NI | 90/10 | Click-through rate",
    baseline: 8.0,
    absoluteMde: 1.0,
    alpha: 0.025,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 73425, perGroup: [66082, 7343] },
  },
  {
    name: "NI | 10/90 | Sign-up conversion",
    baseline: 18.0,
    absoluteMde: 1.08,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 86930, perGroup: [8693, 78237] },
  },
  {
    name: "NI | 10/90 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.30000000000000004,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 222115, perGroup: [22212, 199903] },
  },
  {
    name: "NI | 10/90 | Low baseline, loose margin",
    baseline: 2.0,
    absoluteMde: 0.4,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 84153, perGroup: [8416, 75737] },
  },
  {
    name: "NI | 99/1 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 562052, perGroup: [556431, 5621] },
  },
  {
    name: "NI | 99/1 | High power, tight margin",
    baseline: 20.0,
    absoluteMde: 1.0,
    alpha: 0.025,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 2100156, perGroup: [2079154, 21002] },
  },
  {
    name: "NI | 99/1 | Email open rate",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 1621942, perGroup: [1605722, 16220] },
  },
  {
    name: "NI | 1/99 | Conservative",
    baseline: 5.0,
    absoluteMde: 0.25,
    alpha: 0.025,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 8066306, perGroup: [80664, 7985642] },
  },
  {
    name: "NI | 1/99 | E-commerce conversion",
    baseline: 3.0,
    absoluteMde: 0.30000000000000004,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 2019220, perGroup: [20193, 1999027] },
  },
  {
    name: "NI | 1/99 | High baseline, tight margin",
    baseline: 30.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 582868, perGroup: [5829, 577039] },
  },
  // End of tests generated from epiR::epi.ssninfb on 2025-06-24

  // Start of tests generated from TrialSize::TwoSampleProportion.NIS on 2025-06-24
  {
    name: "NI | 50/50 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 22258, perGroup: [11129, 11129] },
  },
  {
    name: "NI | 50/50 | Conservative",
    baseline: 5.0,
    absoluteMde: 0.25,
    alpha: 0.025,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 319426, perGroup: [159713, 159713] },
  },
  {
    name: "NI | 50/50 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.6000000000000001,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 19992, perGroup: [9996, 9996] },
  },
  {
    name: "NI | 50/50 | Email open rate",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.5, 0.5],
    expected: { total: 64230, perGroup: [32115, 32115] },
  },
  {
    name: "NI | 70/30 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 26500, perGroup: [18550, 7950] },
  },
  {
    name: "NI | 70/30 | Tight margin",
    baseline: 20.0,
    absoluteMde: 0.4,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 294410, perGroup: [206087, 88323] },
  },
  {
    name: "NI | 70/30 | Click rate",
    baseline: 8.0,
    absoluteMde: 0.8,
    alpha: 0.025,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.7, 0.3],
    expected: { total: 49170, perGroup: [34419, 14751] },
  },
  {
    name: "NI | 30/70 | Loose margin",
    baseline: 15.0,
    absoluteMde: 2.25,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 8623, perGroup: [2587, 6036] },
  },
  {
    name: "NI | 30/70 | Purchase rate",
    baseline: 45.0,
    absoluteMde: 1.3499999999999999,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 39982, perGroup: [11995, 27987] },
  },
  {
    name: "NI | 30/70 | High power",
    baseline: 30.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.3, 0.7],
    expected: { total: 48099, perGroup: [14430, 33669] },
  },
  {
    name: "NI | 80/20 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 34780, perGroup: [27824, 6956] },
  },
  {
    name: "NI | 80/20 | Strict alpha",
    baseline: 12.0,
    absoluteMde: 0.96,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 71875, perGroup: [57500, 14375] },
  },
  {
    name: "NI | 80/20 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.6000000000000001,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.8, 0.2],
    expected: { total: 31235, perGroup: [24988, 6247] },
  },
  {
    name: "NI | 20/80 | Conservative",
    baseline: 5.0,
    absoluteMde: 0.25,
    alpha: 0.025,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 499104, perGroup: [99821, 399283] },
  },
  {
    name: "NI | 20/80 | Email open rate",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 100359, perGroup: [20072, 80287] },
  },
  {
    name: "NI | 20/80 | Loose margin",
    baseline: 15.0,
    absoluteMde: 2.25,
    alpha: 0.05,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.2, 0.8],
    expected: { total: 11318, perGroup: [2264, 9054] },
  },
  {
    name: "NI | 90/10 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 61830, perGroup: [55647, 6183] },
  },
  {
    name: "NI | 90/10 | Tight margin",
    baseline: 20.0,
    absoluteMde: 0.4,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 686960, perGroup: [618264, 68696] },
  },
  {
    name: "NI | 90/10 | Click rate",
    baseline: 8.0,
    absoluteMde: 0.8,
    alpha: 0.025,
    power: 0.85,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.9, 0.1],
    expected: { total: 114730, perGroup: [103257, 11473] },
  },
  {
    name: "NI | 10/90 | Purchase rate",
    baseline: 45.0,
    absoluteMde: 1.3499999999999999,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 93290, perGroup: [9329, 83961] },
  },
  {
    name: "NI | 10/90 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.6000000000000001,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 55529, perGroup: [5553, 49976] },
  },
  {
    name: "NI | 10/90 | High power",
    baseline: 30.0,
    absoluteMde: 1.5,
    alpha: 0.05,
    power: 0.95,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.1, 0.9],
    expected: { total: 112230, perGroup: [11223, 101007] },
  },
  {
    name: "NI | 99/1 | Basic",
    baseline: 10.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 562100, perGroup: [556479, 5621] },
  },
  {
    name: "NI | 99/1 | Strict alpha",
    baseline: 12.0,
    absoluteMde: 0.96,
    alpha: 0.01,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 1161600, perGroup: [1149984, 11616] },
  },
  {
    name: "NI | 99/1 | Email open rate",
    baseline: 25.0,
    absoluteMde: 1.0,
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.99, 0.01],
    expected: { total: 1622000, perGroup: [1605780, 16220] },
  },
  {
    name: "NI | 1/99 | Conservative",
    baseline: 5.0,
    absoluteMde: 0.25,
    alpha: 0.025,
    power: 0.9,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 8066306, perGroup: [80664, 7985642] },
  },
  {
    name: "NI | 1/99 | E-commerce",
    baseline: 3.0,
    absoluteMde: 0.6000000000000001,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 504806, perGroup: [5049, 499757] },
  },
  {
    name: "NI | 1/99 | Tight margin",
    baseline: 20.0,
    absoluteMde: 0.4,
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    buffer: 0,
    testType: "non-inferiority",
    correctionMethod: "none",
    trafficDistribution: [0.01, 0.99],
    expected: { total: 6245009, perGroup: [62451, 6182558] },
  },
  // End of tests generated from TrialSize::TwoSampleProportion.NIS on 2025-06-24
];

// Test that MDE -> SampleSize -> MDE returns the original MDE.
const symmetryTestCases = [
  {
    name: "Symmetry: Standard Two-Tailed A/B",
    baseline: 5.0,
    absoluteMde: 0.5,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Absolute MDE",
    baseline: 2.5,
    absoluteMde: 0.5,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Superiority Test",
    baseline: 20.0,
    absoluteMde: 1.0,
    testType: "superiority",
    alpha: 0.05,
    power: 0.95,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Equivalence with Bonferroni",
    baseline: 10.0,
    absoluteMde: 1.5,
    testType: "equivalence",
    alpha: 0.05,
    power: 0.8,
    variantCount: 4,
    trafficDistribution: [0.25, 0.25, 0.25, 0.25],
    correctionMethod: "bonferroni",
  },
  {
    name: "Symmetry: Non-Inferiority with Sidak",
    baseline: 15.0,
    absoluteMde: 0.6,
    testType: "non-inferiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 3,
    trafficDistribution: [0.33, 0.33, 0.34],
    correctionMethod: "sidak",
  },
  {
    name: "Symmetry: 5-Way Even Split",
    baseline: 12.0,
    absoluteMde: 0.96,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 5,
    trafficDistribution: [0.2, 0.2, 0.2, 0.2, 0.2],
    correctionMethod: "none",
  },
  {
    name: "Symmetry: 10-Way with Bonferroni",
    baseline: 8.0,
    absoluteMde: 0.96,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 10,
    trafficDistribution: Array(10).fill(0.1),
    correctionMethod: "bonferroni",
  },
  {
    name: "Symmetry: 50% Baseline (Maximum Variance)",
    baseline: 50.0,
    absoluteMde: 2.5,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Ultra-Tiny Baseline",
    baseline: 0.001,
    absoluteMde: 0.005,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Microscopic Absolute MDE",
    baseline: 5.0,
    absoluteMde: 0.0001,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Heavy Control (70/15/15)",
    baseline: 15.0,
    absoluteMde: 1.2,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 3,
    trafficDistribution: [0.7, 0.15, 0.15],
  },
  {
    name: "Symmetry: Alpha = Power",
    baseline: 10.0,
    absoluteMde: 1.0,
    testType: "two-tailed",
    alpha: 0.8,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Mobile Conversion (Low)",
    baseline: 0.7,
    absoluteMde: 0.105,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 3,
    trafficDistribution: [0.6, 0.2, 0.2],
  },
  {
    name: "Symmetry: Newsletter Signup (High)",
    baseline: 87.5,
    absoluteMde: 1.75,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 4,
    trafficDistribution: [0.4, 0.3, 0.2, 0.1],
  },
  {
    name: "Symmetry: Everything Extreme",
    baseline: 0.0123,
    absoluteMde: 0.056185047,
    testType: "equivalence",
    alpha: 0.001,
    power: 0.999,
    variantCount: 13,
    trafficDistribution: [0.5, ...Array(12).fill(0.5/12)],
    correctionMethod: "bonferroni",
  },
  {
    name: "Symmetry: Tiny Control, Large Variant (10/90)",
    baseline: 20.0,
    absoluteMde: 3.0,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.1, 0.9],
  },
  {
    name: "Symmetry: 3-Way Split (34/33/33)",
    baseline: 5.0,
    absoluteMde: 0.5,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 3,
    trafficDistribution: [0.34, 0.33, 0.33],
  },
  {
    name: "Symmetry: Uneven with Multiple Weak Links (80/10/5/5)",
    baseline: 8.0,
    absoluteMde: 2.0,
    testType: "two-tailed",
    correctionMethod: "bonferroni",
    alpha: 0.05,
    power: 0.8,
    variantCount: 4,
    trafficDistribution: [0.8, 0.1, 0.05, 0.05],
  },
  {
    name: "Symmetry: 95/5 Split",
    baseline: 30.0,
    absoluteMde: 6.0,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.95, 0.05],
  },
  {
    name: "Symmetry: Non-Inferiority with Uneven Split",
    baseline: 50.0,
    absoluteMde: 1.0,
    testType: "non-inferiority",
    alpha: 0.05,
    power: 0.9,
    variantCount: 2,
    trafficDistribution: [0.9, 0.1],
  },
  {
    name: "Symmetry: Equivalence with Uneven Multi-Variant",
    baseline: 15.0,
    absoluteMde: 0.5,
    testType: "equivalence",
    correctionMethod: "sidak",
    alpha: 0.05,
    power: 0.8,
    variantCount: 3,
    trafficDistribution: [0.8, 0.1, 0.1],
  },
  {
    name: "Symmetry: MDE pushes Target to 100%",
    baseline: 80.0,
    absoluteMde: 20.0,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: MDE pushes Target to 0%",
    baseline: 5.0,
    absoluteMde: 5.0,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Near-Perfect Baseline (99.999%)",
    baseline: 99.999,
    absoluteMde: 0.00099999,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Ultra-High Power + Strict Alpha",
    baseline: 10.0,
    absoluteMde: 0.5,
    testType: "two-tailed",
    alpha: 0.001,
    power: 0.999,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Relaxed Power + Loose Alpha",
    baseline: 15.0,
    absoluteMde: 3.0,
    testType: "superiority",
    alpha: 0.2,
    power: 0.5,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: 50% Baseline + Huge Relative MDE",
    baseline: 50.0, // Maximum variance point
    absoluteMde: 50.0,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: Baseline = MDE (Doubling)",
    baseline: 5.0,
    absoluteMde: 5.0,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
  {
    name: "Symmetry: 20-Way Split",
    baseline: 8.0,
    absoluteMde: 1.2,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 20,
    trafficDistribution: Array(20).fill(0.05),
    correctionMethod: "bonferroni",
  },
  {
    name: "Symmetry: Tiny Variants in Large Test",
    baseline: 15.0,
    absoluteMde: 1.7999999999999998,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 10,
    trafficDistribution: [0.91, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01],
    correctionMethod: "bonferroni",
  },
  {
    name: "Symmetry: Non-Inferiority + Uneven + High Variants",
    baseline: 25.0,
    absoluteMde: 0.75,
    testType: "non-inferiority",
    alpha: 0.05,
    power: 0.9,
    variantCount: 7,
    trafficDistribution: [0.4, 0.15, 0.15, 0.1, 0.1, 0.05, 0.05],
    correctionMethod: "sidak",
  },
  {
    name: "Symmetry: Equivalence + Extreme Distribution",
    baseline: 35.0,
    absoluteMde: 1.0,
    testType: "equivalence",
    alpha: 0.01,
    power: 0.95,
    variantCount: 5,
    trafficDistribution: [0.7, 0.1, 0.1, 0.05, 0.05],
    correctionMethod: "bonferroni",
  },
  {
    name: "Symmetry: Non-Terminating Decimals",
    baseline: 10.0/3.0, // 3.333...%
    absoluteMde: 1.0/3.0,
    testType: "two-tailed",
    alpha: 0.05,
    power: 0.8,
    variantCount: 3,
    trafficDistribution: [1.0/3.0, 1.0/3.0, 1.0/3.0],
  },
  {
    name: "Symmetry: π and e in the Mix",
    baseline: Math.PI,
    absoluteMde: Math.E,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [1/Math.PI, 1 - 1/Math.PI],
  },
  {
    name: "Symmetry: The Baseline Destroyer",
    baseline: 99.9999,
    absoluteMde: 9.99999e-05,
    testType: "non-inferiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 100,
    trafficDistribution: Array(100).fill(0.01),
    correctionMethod: "sidak",
  },
  {
    name: "Symmetry: MDE = Baseline (100% Relative)",
    baseline: 7.5,
    absoluteMde: 7.5,
    testType: "superiority",
    alpha: 0.05,
    power: 0.8,
    variantCount: 2,
    trafficDistribution: [0.5, 0.5],
  },
];

async function runDirectTest(testCase) {
  debugLog(`Running test: ${testCase.name}`, "header");

  try {
    const config = {
      baseline: testCase.baseline / 100,
      absoluteMde: testCase.absoluteMde,
      alpha: testCase.alpha,
      power: testCase.power,
      testType: testCase.testType,
      correctionMethod: testCase.correctionMethod,
      trafficDistribution: testCase.trafficDistribution,
      variantCount: testCase.variantCount,
      buffer: testCase.buffer || 0,
    };
    const results = calculateExperimentSize(config);

    const expectedTotal = testCase.expected.total;
    const expectedPerGroup = testCase.expected.perGroup;
    const totalSizeCheck = areClose(results.totalSampleSize, expectedTotal);
    const perGroupCheck = areArraysClose(
      results.sampleSizePerGroup,
      expectedPerGroup
    );
    debugLog(
      `  Calculated Total / Per Group: ${
        results.totalSampleSize
      } / [${results.sampleSizePerGroup.join(", ")}]`
    );
    debugLog(
      `  Expected Total / Per Group:   ${expectedTotal} / [${expectedPerGroup.join(
        ", "
      )}]`
    );

    if (totalSizeCheck && perGroupCheck) {
      debugLog(`Test passed`, "pass");
      passedTests++;
      return true;
    } else {
      debugLog(`Test failed: Mismatch found.`, "fail");
      if (!totalSizeCheck)
        debugLog(`  - Total sample size is outside tolerance.`, "fail");
      if (!perGroupCheck)
        debugLog(`  - Per-group sample sizes are outside tolerance.`, "fail");
      failedTests++;
      failedTestNames.push(testCase.name);
      return false;
    }
  } catch (error) {
    debugLog(`Test error: ${error.message}`, "fail");
    failedTests++;
    failedTestNames.push(`${testCase.name} (Error: ${error.message})`);
    return false;
  }
}

async function runSymmetryTest(testCase) {
  debugLog(`Test: ${testCase.name}`, "subheader");
  try {
    const experimentConfig = {
      baseline: testCase.baseline / 100,
      absoluteMde: testCase.absoluteMde,
      alpha: testCase.alpha,
      power: testCase.power,
      variantCount: testCase.variantCount,
      testType: testCase.testType,
      correctionMethod: testCase.correctionMethod || "none",
      trafficDistribution: testCase.trafficDistribution,
      buffer: 0,
    };

    // Calculate required sample size based on MDE.
    const results = calculateExperimentSize(experimentConfig);
    const totalSampleSize = results.totalSampleSize;

    // Call the inverse function with the total sample size + traffic distribution.
    const recoveredMde = calculateMDEFromSampleSize(
      totalSampleSize,
      { ...testCase, buffer: 0 }
    );

    if (areClose(testCase.absoluteMde, recoveredMde)) {
      debugLog(
        `Test passed - Original MDE: ${testCase.absoluteMde.toFixed(
          2
        )}%, Recovered: ${recoveredMde.toFixed(2)}%`,
        "pass"
      );
      passedTests++;
    } else {
      debugLog(
        `Test failed - Original MDE: ${testCase.absoluteMde.toFixed(
          2
        )}%, Recovered: ${recoveredMde.toFixed(2)}%`,
        "fail"
      );
      failedTests++;
      failedTestNames.push(`${testCase.name}`);
    }
  } catch (error) {
    debugLog(`Test error: ${error.message}`, "fail");
    failedTests++;
    failedTestNames.push(`${testCase.name} (Error)`);
  }
}

async function runAllTests() {
  debugLog("Running tests…", "header");
  passedTests = 0;
  failedTests = 0;
  failedTestNames = [];
  for (const testCase of regressionTestCases) {
    await runDirectTest(testCase);
  }
  debugLog("Running symmetry (bi-directionality) tests...", "header");
  for (const testCase of symmetryTestCases) {
    await runSymmetryTest(testCase);
  }
  const totalTests = regressionTestCases.length + symmetryTestCases.length;
  if (failedTests === 0) {
    debugLog("All tests passed! 🎉", "pass");
  } else {
    debugLog(`${failedTests} tests failed:`, "fail");
    failedTestNames.forEach((testName, index) => {
      debugLog(` ${index + 1}. ${testName}`, "fail");
    });
  }
  debugLog(
    `${passedTests}/${totalTests} tests passed (${Math.round(
      (passedTests / totalTests) * 100
    )}%)`,
    "summary"
  );
}

function initTests() {
  if (window.location.search.includes("?test")) {
    if (!document.getElementById("debug-panel")) {
      document.body.appendChild(createDebugPanel());
    }
    runAllTests();
  }
}

initTests();
